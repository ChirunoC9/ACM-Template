{
	// Place your Cont 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// "code" {
	// 	"scope": "c++",
	// 	"prefix": "code",
	// 	"body": [
	// 		"#include <bits/stdc++.H"
	// 	]
	// }
	"Basic Tempalte Code": {
		"prefix": "Code",
		"scope": "c++,cpp,cxx",
		"body": [
		  "#include <bits/stdc++.h>",
		  "",
		  "#if !defined (ONLINE_JUDGE)",
		  "\t#include \"debug.hpp\"",
		  "#else",
		  "\t#define debug(...) // なんでもいい...",
		  "#endif",
		  "",
		  "template <typename T, typename Compare = std::greater<T>>",
		  "using BinaryHeap = std::priority_queue<T, std::vector<T>, Compare>;",
		  "template <typename T>",
		  "using Stack = std::stack<T, std::vector<T>>;",
		  "",
		  "using i8 = int8_t;",
		  "using u8 = uint8_t;",
		  "using i32 = int32_t;",
		  "using u32 = uint32_t;",
		  "using i64 = int64_t;",
		  "using u64 = uint64_t;",
		  "using i128 = __int128_t;",
		  "using u128 = __uint128_t;",
		  "",
		  "using namespace std;",
		  "",
		  "void Main() {",
		  "\t$0",
		  "}",
		  "",
		  "int main() {",
		  "\tstd::cin.tie(nullptr)->sync_with_stdio(false);",
		  "\tstd::cout << std::fixed << std::setprecision(12);",
		  "",
		  "\tint test = 1;",
		  "\tcin >> test;",
		  "",
		  "\tfor (int rp = 1; test --> 0; rp ++) {",
		  "\t\tdebug(rp);",
		  "\t\tMain();",
		  "\t}",
		  "}"
		],
		"description": "Basic Tempalte Code"
	  }
}